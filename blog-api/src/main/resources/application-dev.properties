# Server port configuration
server.port=8090
# Blog information configuration
blog.name=hhq's Blog
# Production environment requires changing the server IP or domain name
blog.api=http://localhost:${server.port}
blog.cms=http://localhost:8080
blog.view=http://localhost:8081
# MySQL database configuration
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/nblog?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root
# Redis cache configuration
spring.redis.host=192.168.17.132
spring.redis.password=123456
spring.redis.port=6379
spring.redis.database=0
spring.redis.timeout=10000ms
# MyBatis configuration
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true
# Logging configuration
logging.level.root=info
logging.level.top.hhq=debug
logging.file=blog-api/log/blog-dev
# Token expiration time in milliseconds (3 days)
token.expireTime=259200000
# Secret key for token security, must be changed in a production environment
token.secretKey=abcdefghijklmnopqrstuvwxyz
# Comment notification configuration
# Available channels: Telegram='tg', Email='mail' (visitor comment notifications are fixed to email)
comment.notify.channel=mail
# Whether new comments are open by default
comment.default-open=true
# Email server configuration for sending notifications
spring.mail.host=smtp.mxhichina.com
spring.mail.port=25
spring.mail.username=Your Email Account
spring.mail.password=Your Email Password
# Telegram bot configuration for sending notifications through Telegram
tg.bot.api=https://api.telegram.org/bot
tg.bot.token=Your Bot Token
tg.bot.chat-id=Your Chat ID
tg.bot.use-proxy=false
tg.bot.use-reverse-proxy=true
tg.bot.reverse-proxy-url=Your Reverse Proxy URL
# HTTP proxy configuration (if not using, no need to modify)
http.proxy.server.host=127.0.0.1
http.proxy.server.port=7890
http.proxy.server.timeout=10000
# File upload configuration
upload.channel=local
upload.file.path=/Users/hhq/Desktop/upload/
upload.file.access-path=/image/**
upload.file.resources-locations=file:${upload.file.path}
# GitHub upload configuration (if using GitHub for file hosting)
upload.github.token=Your GitHub Token
upload.github.username=Your GitHub Username
upload.github.repos=Repository Name
upload.github.repos-path=/comment/avatar
# Upyun (another cloud storage service) configuration (if using Upyun for file hosting)
upload.upyun.bucket-name=Your Bucket Name
upload.upyun.username=Your Operator Name
upload.upyun.password=Your Operator Password
upload.upyun.path=/comment/avatar
upload.upyun.domain=Your CDN Domain
```
Remember to replace placeholders (like `Your Email Account`, `Your Bot Token`, etc.) with actual values appropriate to your environment.